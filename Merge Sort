public class Solution {

    public static void mergeSort(int[] arr){
        mergeSort(arr, 0, arr.length - 1);    
    }
    
    public static void mergeSort(int[] arr, int start, int end){
        if(start < end){
            int mid = (start + end) / 2;
            mergeSort(arr, start, mid);
            mergeSort(arr, mid + 1, end);
            merge(arr, start, mid, end);
        }
    }
    
    public static void merge(int[] arr, int start, int mid, int end){
        int n1 = mid - start + 1;
        int n2 = end - mid;
        
        int[] temp1 = new int[n1];
        int[] temp2 = new int[n2];
        
        for(int i = 0 ; i < n1 ; i++){
            temp1[i] = arr[start + i];
        }
        
        for(int j = 0 ; j < n2 ; j++){
            temp2[j] = arr[mid + j + 1];
        }
        
        int i = 0 , j = 0 , k = start;
        
        while(i < n1 && j < n2){
            if(temp1[i] < temp2[j]){
                arr[k] = temp1[i];
                i++;
            }else{
                arr[k] = temp2[j];
                j++;
            }
            k++;
        }
        
        while(i < n1){
            arr[k] = temp1[i];
            i++;
            k++;
        }
        
        while(j < n2){
            arr[k] = temp2[j];
            j++;
            k++;
        }
        
    }
    
    public static void main(String[] args) {
        
        /* Scanner scan = new Scanner(System.in);
        int count = scan.nextInt();
        int[] arr = new int[count];
        for (int i = 0 ; i < count ; i++){
            arr[i] = scan.nextInt();
        } */
        int[] arr = {5, 4, 3, 1, 2};
        mergeSort(arr);
        System.out.println(Arrays.toString(arr));
        /* System.out.print("[");
        for (int i = 0 ; i < count ; i++){
            if(i == count - 1){
                 System.out.print(arr[i]);
            }else{
                System.out.print(arr[i] + ",");
            }
        }
        System.out.print("]"); */
    }
}
